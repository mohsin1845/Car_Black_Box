

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 12 16:38:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0013                     _SSPBUF	set	19
   295     0014                     _SSPCON	set	20
   296     00A5                     _SSPEN	set	165
   297     0093                     _SSPADD	set	147
   298     0091                     _SSPCON2	set	145
   299     048E                     _ACKSTAT	set	1166
   300     048C                     _ACKEN	set	1164
   301     048D                     _ACKDT	set	1165
   302     048B                     _RCEN	set	1163
   303     048A                     _PEN	set	1162
   304     0488                     _SEN	set	1160
   305     04A2                     _R_nW	set	1186
   306                           
   307                           	psect	cinit
   308     07FC                     start_initialization:	
   309                           ; #config settings
   310                           
   311     07FC                     __initialization:
   312     07FC                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315     07FC                     __end_of__initialization:
   316     07FC  0183               	clrf	3
   317     07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	cstackCOMMON
   320     0070                     __pcstackCOMMON:
   321     0070                     ?_i2c_start:
   322     0070                     ??_i2c_start:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ??_i2c_write:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_i2c_stop:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ??_i2c_stop:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_i2c_wait_for_idle:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ??_i2c_wait_for_idle:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_i2c_write:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?___lldiv:	
   347                           ; 2 bytes @ 0x0
   348                           
   349     0070                     i2c_write@data:	
   350                           ; 4 bytes @ 0x0
   351                           
   352     0070                     ___lldiv@divisor:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 4 bytes @ 0x0
   357     0070                     	ds	1
   358     0071                     ?_write_ext_eeprom:
   359     0071                     write_ext_eeprom@data:	
   360                           ; 1 bytes @ 0x1
   361                           
   362                           
   363                           ; 1 bytes @ 0x1
   364     0071                     	ds	1
   365     0072                     ??_write_ext_eeprom:
   366     0072                     write_ext_eeprom@address:	
   367                           ; 1 bytes @ 0x2
   368                           
   369                           
   370                           ; 1 bytes @ 0x2
   371     0072                     	ds	2
   372     0074                     ___lldiv@dividend:
   373                           
   374                           ; 4 bytes @ 0x4
   375     0074                     	ds	4
   376     0078                     ??___lldiv:
   377                           
   378                           ; 1 bytes @ 0x8
   379     0078                     	ds	1
   380     0079                     ___lldiv@quotient:
   381                           
   382                           ; 4 bytes @ 0x9
   383     0079                     	ds	4
   384     007D                     ___lldiv@counter:
   385                           
   386                           ; 1 bytes @ 0xD
   387     007D                     	ds	1
   388     007E                     ??_main:
   389                           
   390                           	psect	cstackBANK0
   391     0020                     __pcstackBANK0:	
   392                           ; 1 bytes @ 0xE
   393                           
   394     0020                     ?_init_i2c:
   395     0020                     init_i2c@baud:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 4 bytes @ 0x0
   400     0020                     	ds	4
   401     0024                     ??_init_i2c:
   402                           
   403                           ; 1 bytes @ 0x4
   404     0024                     	ds	4
   405                           
   406                           	psect	maintext
   407     072B                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 11 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels required when called: 3
   433 ;; This function calls:
   434 ;;		_init_i2c
   435 ;;		_write_ext_eeprom
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441     072B                     _main:	
   442                           ;psect for function _main
   443                           
   444     072B                     l748:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   447                           
   448                           
   449                           ;main.c: 13:     init_i2c(100000);
   450     072B  3000               	movlw	0
   451     072C  1283               	bcf	3,5	;RP0=0, select bank0
   452     072D  1303               	bcf	3,6	;RP1=0, select bank0
   453     072E  00A3               	movwf	init_i2c@baud+3
   454     072F  3001               	movlw	1
   455     0730  00A2               	movwf	init_i2c@baud+2
   456     0731  3086               	movlw	134
   457     0732  00A1               	movwf	init_i2c@baud+1
   458     0733  30A0               	movlw	160
   459     0734  00A0               	movwf	init_i2c@baud
   460     0735  120A  118A  275E  120A  118A  	fcall	_init_i2c
   461     073A                     l750:
   462                           
   463                           ;main.c: 16:     write_ext_eeprom (0xC8, '1');
   464     073A  3031               	movlw	49
   465     073B  00F1               	movwf	write_ext_eeprom@data
   466     073C  30C8               	movlw	200
   467     073D  120A  118A  270D  120A  118A  	fcall	_write_ext_eeprom
   468     0742                     l752:
   469                           
   470                           ;main.c: 17:  write_ext_eeprom (0xC9, '0');
   471     0742  3030               	movlw	48
   472     0743  00F1               	movwf	write_ext_eeprom@data
   473     0744  30C9               	movlw	201
   474     0745  120A  118A  270D  120A  118A  	fcall	_write_ext_eeprom
   475     074A                     l754:
   476                           
   477                           ;main.c: 18:  write_ext_eeprom (0xCA, '0');
   478     074A  3030               	movlw	48
   479     074B  00F1               	movwf	write_ext_eeprom@data
   480     074C  30CA               	movlw	202
   481     074D  120A  118A  270D  120A  118A  	fcall	_write_ext_eeprom
   482     0752                     l756:
   483                           
   484                           ;main.c: 19:  write_ext_eeprom (0xCB, '0');
   485     0752  3030               	movlw	48
   486     0753  00F1               	movwf	write_ext_eeprom@data
   487     0754  30CB               	movlw	203
   488     0755  120A  118A  270D  120A  118A  	fcall	_write_ext_eeprom
   489     075A                     l25:	
   490                           ;main.c: 20:     while (1)
   491                           
   492     075A                     l26:	
   493                           ;main.c: 21:     {;main.c: 23:     }
   494                           
   495     075A  2F5A               	goto	l25
   496     075B  120A  118A  2800   	ljmp	start
   497     075E                     __end_of_main:
   498                           
   499                           	psect	text1
   500     070D                     __ptext1:	
   501 ;; *************** function _write_ext_eeprom *****************
   502 ;; Defined at:
   503 ;;		line 11 in file "ext_eeprom.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  address         1    wreg     unsigned char 
   506 ;;  data            1    1[COMMON] unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  address         1    2[COMMON] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         1       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         2       0       0       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 2
   525 ;; This function calls:
   526 ;;		_i2c_start
   527 ;;		_i2c_stop
   528 ;;		_i2c_write
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534     070D                     _write_ext_eeprom:	
   535                           ;psect for function _write_ext_eeprom
   536                           
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _write_ext_eeprom: [wreg+status,2+status,0+pclath+cstack]
   540                           ;write_ext_eeprom@address stored from wreg
   541     070D  00F2               	movwf	write_ext_eeprom@address
   542     070E                     l738:
   543                           
   544                           ;ext_eeprom.c: 11: void write_ext_eeprom(unsigned char address, unsigned char data);ext_
      +                          eeprom.c: 12: {;ext_eeprom.c: 13:     i2c_start();
   545     070E  120A  118A  26E3  120A  118A  	fcall	_i2c_start
   546                           
   547                           ;ext_eeprom.c: 14:     i2c_write(0xA0);
   548     0713  30A0               	movlw	160
   549     0714  120A  118A  26F5  120A  118A  	fcall	_i2c_write
   550                           
   551                           ;ext_eeprom.c: 15:     i2c_write(address);
   552     0719  0872               	movf	write_ext_eeprom@address,w
   553     071A  120A  118A  26F5  120A  118A  	fcall	_i2c_write
   554                           
   555                           ;ext_eeprom.c: 16:     i2c_write(data);
   556     071F  0871               	movf	write_ext_eeprom@data,w
   557     0720  120A  118A  26F5  120A  118A  	fcall	_i2c_write
   558                           
   559                           ;ext_eeprom.c: 17:     i2c_stop();
   560     0725  120A  118A  26EC  120A  118A  	fcall	_i2c_stop
   561     072A                     l13:
   562     072A  0008               	return
   563     072B                     __end_of_write_ext_eeprom:
   564                           
   565                           	psect	text2
   566     06F5                     __ptext2:	
   567 ;; *************** function _i2c_write *****************
   568 ;; Defined at:
   569 ;;		line 49 in file "i2c.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  data            1    wreg     unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  data            1    0[COMMON] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  2    4[None  ] int 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 1
   590 ;; This function calls:
   591 ;;		_i2c_wait_for_idle
   592 ;; This function is called by:
   593 ;;		_write_ext_eeprom
   594 ;;		_read_ext_eeprom
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     06F5                     _i2c_write:	
   599                           ;psect for function _i2c_write
   600                           
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
   604                           ;i2c_write@data stored from wreg
   605     06F5  00F0               	movwf	i2c_write@data
   606     06F6                     l628:
   607                           
   608                           ;i2c.c: 49: int i2c_write(unsigned char data);i2c.c: 50: {;i2c.c: 51:     i2c_wait_for_i
      +                          dle();
   609     06F6  120A  118A  2700  120A  118A  	fcall	_i2c_wait_for_idle
   610     06FB                     l630:
   611                           
   612                           ;i2c.c: 52:     SSPBUF = data;
   613     06FB  0870               	movf	i2c_write@data,w
   614     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   615     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   616     06FE  0093               	movwf	19	;volatile
   617     06FF                     l632:
   618     06FF                     l76:	
   619                           ;i2c.c: 53:     return !ACKSTAT;;	Return value of _i2c_write is never used
   620                           
   621     06FF  0008               	return
   622     0700                     __end_of_i2c_write:
   623                           
   624                           	psect	text3
   625     06EC                     __ptext3:	
   626 ;; *************** function _i2c_stop *****************
   627 ;; Defined at:
   628 ;;		line 25 in file "i2c.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 1
   649 ;; This function calls:
   650 ;;		_i2c_wait_for_idle
   651 ;; This function is called by:
   652 ;;		_write_ext_eeprom
   653 ;;		_read_ext_eeprom
   654 ;;		_i2c_rep_start
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     06EC                     _i2c_stop:	
   659                           ;psect for function _i2c_stop
   660                           
   661     06EC                     l636:	
   662                           ;incstack = 0
   663                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;i2c.c: 27:     i2c_wait_for_idle();
   667     06EC  120A  118A  2700  120A  118A  	fcall	_i2c_wait_for_idle
   668     06F1                     l638:
   669                           
   670                           ;i2c.c: 28:     PEN = 1;
   671     06F1  1683               	bsf	3,5	;RP0=1, select bank1
   672     06F2  1303               	bcf	3,6	;RP1=0, select bank1
   673     06F3  1511               	bsf	17,2	;volatile
   674     06F4                     l67:
   675     06F4  0008               	return
   676     06F5                     __end_of_i2c_stop:
   677                           
   678                           	psect	text4
   679     06E3                     __ptext4:	
   680 ;; *************** function _i2c_start *****************
   681 ;; Defined at:
   682 ;;		line 19 in file "i2c.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 1
   703 ;; This function calls:
   704 ;;		_i2c_wait_for_idle
   705 ;; This function is called by:
   706 ;;		_write_ext_eeprom
   707 ;;		_read_ext_eeprom
   708 ;;		_i2c_rep_start
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712     06E3                     _i2c_start:	
   713                           ;psect for function _i2c_start
   714                           
   715     06E3                     l624:	
   716                           ;incstack = 0
   717                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
   718                           
   719                           
   720                           ;i2c.c: 21:     i2c_wait_for_idle();
   721     06E3  120A  118A  2700  120A  118A  	fcall	_i2c_wait_for_idle
   722     06E8                     l626:
   723                           
   724                           ;i2c.c: 22:     SEN = 1;
   725     06E8  1683               	bsf	3,5	;RP0=1, select bank1
   726     06E9  1303               	bcf	3,6	;RP1=0, select bank1
   727     06EA  1411               	bsf	17,0	;volatile
   728     06EB                     l64:
   729     06EB  0008               	return
   730     06EC                     __end_of_i2c_start:
   731                           
   732                           	psect	text5
   733     0700                     __ptext5:	
   734 ;; *************** function _i2c_wait_for_idle *****************
   735 ;; Defined at:
   736 ;;		line 14 in file "i2c.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_i2c_start
   760 ;;		_i2c_stop
   761 ;;		_i2c_write
   762 ;;		_i2c_read
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766     0700                     _i2c_wait_for_idle:	
   767                           ;psect for function _i2c_wait_for_idle
   768                           
   769     0700                     l620:	
   770                           ;incstack = 0
   771                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
   772                           
   773     0700                     l58:	
   774                           ;i2c.c: 16:     while (R_nW || (SSPCON2 & 0x1F));
   775                           
   776     0700  1683               	bsf	3,5	;RP0=1, select bank1
   777     0701  1303               	bcf	3,6	;RP1=0, select bank1
   778     0702  1914               	btfsc	20,2	;volatile
   779     0703  2F05               	goto	u11
   780     0704  2F06               	goto	u10
   781     0705                     u11:
   782     0705  2F00               	goto	l58
   783     0706                     u10:
   784     0706                     l622:
   785     0706  0811               	movf	17,w	;volatile
   786     0707  391F               	andlw	31
   787     0708  1D03               	btfss	3,2
   788     0709  2F0B               	goto	u21
   789     070A  2F0C               	goto	u20
   790     070B                     u21:
   791     070B  2F00               	goto	l58
   792     070C                     u20:
   793     070C                     l61:
   794     070C  0008               	return
   795     070D                     __end_of_i2c_wait_for_idle:
   796                           
   797                           	psect	text6
   798     075E                     __ptext6:	
   799 ;; *************** function _init_i2c *****************
   800 ;; Defined at:
   801 ;;		line 6 in file "i2c.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  baud            4    0[BANK0 ] unsigned long 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       4       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       4       0       0       0
   818 ;;      Totals:         0       8       0       0       0
   819 ;;Total ram usage:        8 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 1
   822 ;; This function calls:
   823 ;;		___lldiv
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829     075E                     _init_i2c:	
   830                           ;psect for function _init_i2c
   831                           
   832     075E                     l740:	
   833                           ;incstack = 0
   834                           ; Regs used in _init_i2c: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   835                           
   836                           
   837                           ;i2c.c: 6: void init_i2c(unsigned long baud);i2c.c: 7: {;i2c.c: 8:     SSPCON = 0x28;
   838     075E  3028               	movlw	40
   839     075F  1283               	bcf	3,5	;RP0=0, select bank0
   840     0760  1303               	bcf	3,6	;RP1=0, select bank0
   841     0761  0094               	movwf	20	;volatile
   842     0762                     l742:
   843                           
   844                           ;i2c.c: 9:     SSPCON2 = 0x00;
   845     0762  1683               	bsf	3,5	;RP0=1, select bank1
   846     0763  1303               	bcf	3,6	;RP1=0, select bank1
   847     0764  0191               	clrf	17	;volatile
   848     0765                     l744:
   849                           
   850                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
   851     0765  1283               	bcf	3,5	;RP0=0, select bank0
   852     0766  1303               	bcf	3,6	;RP1=0, select bank0
   853     0767  0820               	movf	init_i2c@baud,w
   854     0768  00A4               	movwf	??_init_i2c
   855     0769  0821               	movf	init_i2c@baud+1,w
   856     076A  00A5               	movwf	??_init_i2c+1
   857     076B  0822               	movf	init_i2c@baud+2,w
   858     076C  00A6               	movwf	??_init_i2c+2
   859     076D  0823               	movf	init_i2c@baud+3,w
   860     076E  00A7               	movwf	??_init_i2c+3
   861     076F  3002               	movlw	2
   862     0770                     u205:
   863     0770  1003               	clrc
   864     0771  0DA4               	rlf	??_init_i2c,f
   865     0772  0DA5               	rlf	??_init_i2c+1,f
   866     0773  0DA6               	rlf	??_init_i2c+2,f
   867     0774  0DA7               	rlf	??_init_i2c+3,f
   868     0775                     u200:
   869     0775  3EFF               	addlw	-1
   870     0776  1D03               	skipz
   871     0777  2F70               	goto	u205
   872     0778  0827               	movf	??_init_i2c+3,w
   873     0779  00F3               	movwf	___lldiv@divisor+3
   874     077A  0826               	movf	??_init_i2c+2,w
   875     077B  00F2               	movwf	___lldiv@divisor+2
   876     077C  0825               	movf	??_init_i2c+1,w
   877     077D  00F1               	movwf	___lldiv@divisor+1
   878     077E  0824               	movf	??_init_i2c,w
   879     077F  00F0               	movwf	___lldiv@divisor
   880     0780  3001               	movlw	1
   881     0781  00F7               	movwf	___lldiv@dividend+3
   882     0782  3031               	movlw	49
   883     0783  00F6               	movwf	___lldiv@dividend+2
   884     0784  302D               	movlw	45
   885     0785  00F5               	movwf	___lldiv@dividend+1
   886     0786  3000               	movlw	0
   887     0787  00F4               	movwf	___lldiv@dividend
   888     0788  120A  118A  2796  120A  118A  	fcall	___lldiv
   889     078D  0870               	movf	?___lldiv,w
   890     078E  3EFF               	addlw	255
   891     078F  1683               	bsf	3,5	;RP0=1, select bank1
   892     0790  1303               	bcf	3,6	;RP1=0, select bank1
   893     0791  0093               	movwf	19	;volatile
   894     0792                     l746:
   895                           
   896                           ;i2c.c: 11:     SSPEN = 1;
   897     0792  1283               	bcf	3,5	;RP0=0, select bank0
   898     0793  1303               	bcf	3,6	;RP1=0, select bank0
   899     0794  1694               	bsf	20,5	;volatile
   900     0795                     l55:
   901     0795  0008               	return
   902     0796                     __end_of_init_i2c:
   903                           
   904                           	psect	text7
   905     0796                     __ptext7:	
   906 ;; *************** function ___lldiv *****************
   907 ;; Defined at:
   908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  divisor         4    0[COMMON] unsigned long 
   911 ;;  dividend        4    4[COMMON] unsigned long 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  quotient        4    9[COMMON] unsigned long 
   914 ;;  counter         1   13[COMMON] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  4    0[COMMON] unsigned long 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, btemp+1
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         8       0       0       0       0
   925 ;;      Locals:         5       0       0       0       0
   926 ;;      Temps:          1       0       0       0       0
   927 ;;      Totals:        14       0       0       0       0
   928 ;;Total ram usage:       14 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_init_i2c
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937     0796                     ___lldiv:	
   938                           ;psect for function ___lldiv
   939                           
   940     0796                     l712:	
   941                           ;incstack = 0
   942                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   943                           
   944     0796  3000               	movlw	0
   945     0797  00FC               	movwf	___lldiv@quotient+3
   946     0798  3000               	movlw	0
   947     0799  00FB               	movwf	___lldiv@quotient+2
   948     079A  3000               	movlw	0
   949     079B  00FA               	movwf	___lldiv@quotient+1
   950     079C  3000               	movlw	0
   951     079D  00F9               	movwf	___lldiv@quotient
   952     079E  0873               	movf	___lldiv@divisor+3,w
   953     079F  0472               	iorwf	___lldiv@divisor+2,w
   954     07A0  0471               	iorwf	___lldiv@divisor+1,w
   955     07A1  0470               	iorwf	___lldiv@divisor,w
   956     07A2  1903               	skipnz
   957     07A3  2FA5               	goto	u131
   958     07A4  2FA6               	goto	u130
   959     07A5                     u131:
   960     07A5  2FF3               	goto	l734
   961     07A6                     u130:
   962     07A6                     l714:
   963     07A6  01FD               	clrf	___lldiv@counter
   964     07A7  0AFD               	incf	___lldiv@counter,f
   965     07A8  2FB6               	goto	l720
   966     07A9                     l716:
   967     07A9  3001               	movlw	1
   968     07AA  00F8               	movwf	??___lldiv
   969     07AB                     u145:
   970     07AB  1003               	clrc
   971     07AC  0DF0               	rlf	___lldiv@divisor,f
   972     07AD  0DF1               	rlf	___lldiv@divisor+1,f
   973     07AE  0DF2               	rlf	___lldiv@divisor+2,f
   974     07AF  0DF3               	rlf	___lldiv@divisor+3,f
   975     07B0  0BF8               	decfsz	??___lldiv,f
   976     07B1  2FAB               	goto	u145
   977     07B2                     l718:
   978     07B2  3001               	movlw	1
   979     07B3  00FF               	movwf	btemp+1
   980     07B4  087F               	movf	btemp+1,w
   981     07B5  07FD               	addwf	___lldiv@counter,f
   982     07B6                     l720:
   983     07B6  1FF3               	btfss	___lldiv@divisor+3,7
   984     07B7  2FB9               	goto	u151
   985     07B8  2FBA               	goto	u150
   986     07B9                     u151:
   987     07B9  2FA9               	goto	l716
   988     07BA                     u150:
   989     07BA                     l722:
   990     07BA  3001               	movlw	1
   991     07BB  00F8               	movwf	??___lldiv
   992     07BC                     u165:
   993     07BC  1003               	clrc
   994     07BD  0DF9               	rlf	___lldiv@quotient,f
   995     07BE  0DFA               	rlf	___lldiv@quotient+1,f
   996     07BF  0DFB               	rlf	___lldiv@quotient+2,f
   997     07C0  0DFC               	rlf	___lldiv@quotient+3,f
   998     07C1  0BF8               	decfsz	??___lldiv,f
   999     07C2  2FBC               	goto	u165
  1000     07C3                     l724:
  1001     07C3  0873               	movf	___lldiv@divisor+3,w
  1002     07C4  0277               	subwf	___lldiv@dividend+3,w
  1003     07C5  1D03               	skipz
  1004     07C6  2FD1               	goto	u175
  1005     07C7  0872               	movf	___lldiv@divisor+2,w
  1006     07C8  0276               	subwf	___lldiv@dividend+2,w
  1007     07C9  1D03               	skipz
  1008     07CA  2FD1               	goto	u175
  1009     07CB  0871               	movf	___lldiv@divisor+1,w
  1010     07CC  0275               	subwf	___lldiv@dividend+1,w
  1011     07CD  1D03               	skipz
  1012     07CE  2FD1               	goto	u175
  1013     07CF  0870               	movf	___lldiv@divisor,w
  1014     07D0  0274               	subwf	___lldiv@dividend,w
  1015     07D1                     u175:
  1016     07D1  1C03               	skipc
  1017     07D2  2FD4               	goto	u171
  1018     07D3  2FD5               	goto	u170
  1019     07D4                     u171:
  1020     07D4  2FE4               	goto	l730
  1021     07D5                     u170:
  1022     07D5                     l726:
  1023     07D5  0870               	movf	___lldiv@divisor,w
  1024     07D6  02F4               	subwf	___lldiv@dividend,f
  1025     07D7  0871               	movf	___lldiv@divisor+1,w
  1026     07D8  1C03               	skipc
  1027     07D9  0F71               	incfsz	___lldiv@divisor+1,w
  1028     07DA  02F5               	subwf	___lldiv@dividend+1,f
  1029     07DB  0872               	movf	___lldiv@divisor+2,w
  1030     07DC  1C03               	skipc
  1031     07DD  0F72               	incfsz	___lldiv@divisor+2,w
  1032     07DE  02F6               	subwf	___lldiv@dividend+2,f
  1033     07DF  0873               	movf	___lldiv@divisor+3,w
  1034     07E0  1C03               	skipc
  1035     07E1  0F73               	incfsz	___lldiv@divisor+3,w
  1036     07E2  02F7               	subwf	___lldiv@dividend+3,f
  1037     07E3                     l728:
  1038     07E3  1479               	bsf	___lldiv@quotient,0
  1039     07E4                     l730:
  1040     07E4  3001               	movlw	1
  1041     07E5                     u185:
  1042     07E5  1003               	clrc
  1043     07E6  0CF3               	rrf	___lldiv@divisor+3,f
  1044     07E7  0CF2               	rrf	___lldiv@divisor+2,f
  1045     07E8  0CF1               	rrf	___lldiv@divisor+1,f
  1046     07E9  0CF0               	rrf	___lldiv@divisor,f
  1047     07EA  3EFF               	addlw	-1
  1048     07EB  1D03               	skipz
  1049     07EC  2FE5               	goto	u185
  1050     07ED                     l732:
  1051     07ED  3001               	movlw	1
  1052     07EE  02FD               	subwf	___lldiv@counter,f
  1053     07EF  1D03               	btfss	3,2
  1054     07F0  2FF2               	goto	u191
  1055     07F1  2FF3               	goto	u190
  1056     07F2                     u191:
  1057     07F2  2FBA               	goto	l722
  1058     07F3                     u190:
  1059     07F3                     l734:
  1060     07F3  087C               	movf	___lldiv@quotient+3,w
  1061     07F4  00F3               	movwf	?___lldiv+3
  1062     07F5  087B               	movf	___lldiv@quotient+2,w
  1063     07F6  00F2               	movwf	?___lldiv+2
  1064     07F7  087A               	movf	___lldiv@quotient+1,w
  1065     07F8  00F1               	movwf	?___lldiv+1
  1066     07F9  0879               	movf	___lldiv@quotient,w
  1067     07FA  00F0               	movwf	?___lldiv
  1068     07FB                     l198:
  1069     07FB  0008               	return
  1070     07FC                     __end_of___lldiv:
  1071     007E                     btemp	set	126	;btemp
  1072     007E                     wtemp0	set	126
  1073                           
  1074                           	psect	idloc
  1075                           
  1076                           ;Config register IDLOC0 @ 0x2000
  1077                           ;	unspecified, using default values
  1078     2000                     	org	8192
  1079     2000  3FFF               	dw	16383
  1080                           
  1081                           ;Config register IDLOC1 @ 0x2001
  1082                           ;	unspecified, using default values
  1083     2001                     	org	8193
  1084     2001  3FFF               	dw	16383
  1085                           
  1086                           ;Config register IDLOC2 @ 0x2002
  1087                           ;	unspecified, using default values
  1088     2002                     	org	8194
  1089     2002  3FFF               	dw	16383
  1090                           
  1091                           ;Config register IDLOC3 @ 0x2003
  1092                           ;	unspecified, using default values
  1093     2003                     	org	8195
  1094     2003  3FFF               	dw	16383
  1095                           
  1096                           	psect	config
  1097                           
  1098                           ;Config register CONFIG @ 0x2007
  1099                           ;	unspecified, using default values
  1100                           ;	Oscillator Selection bits
  1101                           ;	FOSC = 0x3, unprogrammed default
  1102                           ;	Watchdog Timer Enable bit
  1103                           ;	WDTE = 0x1, unprogrammed default
  1104                           ;	Power-up Timer Enable bit
  1105                           ;	PWRTE = 0x1, unprogrammed default
  1106                           ;	Brown-out Reset Enable bit
  1107                           ;	BOREN = 0x1, unprogrammed default
  1108                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1109                           ;	LVP = 0x1, unprogrammed default
  1110                           ;	Data EEPROM Memory Code Protection bit
  1111                           ;	CPD = 0x1, unprogrammed default
  1112                           ;	Flash Program Memory Write Enable bits
  1113                           ;	WRT = 0x3, unprogrammed default
  1114                           ;	In-Circuit Debugger Mode bit
  1115                           ;	DEBUG = 0x1, unprogrammed default
  1116                           ;	Flash Program Memory Code Protection bit
  1117                           ;	CP = 0x1, unprogrammed default
  1118     2007                     	org	8199
  1119     2007  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _write_ext_eeprom->_i2c_write
    _init_i2c->___lldiv

Critical Paths under _main in BANK0

    _main->_init_i2c

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     775
                           _init_i2c
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_ext_eeprom                                     2     1      1     363
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_i2c
     ___lldiv
   _write_ext_eeprom
     _i2c_start
       _i2c_wait_for_idle
     _i2c_stop
       _i2c_wait_for_idle
     _i2c_write
       _i2c_wait_for_idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 12 16:38:25 2024

                       l13 072A                         l25 075A                         l26 075A  
                       l61 070C                         l55 0795                         l64 06EB  
                       l58 0700                         l67 06F4                         l76 06FF  
                       u10 0706                         u11 0705                         u20 070C  
                       u21 070B                        l620 0700                        l198 07FB  
                      l622 0706                        l630 06FB                        l720 07B6  
                      l712 0796                        l624 06E3                        l632 06FF  
                      l730 07E4                        l722 07BA                        l714 07A6  
                      l626 06E8                        l732 07ED                        l724 07C3  
                      l716 07A9                        l740 075E                        l636 06EC  
                      l628 06F6                        l726 07D5                        l718 07B2  
                      l734 07F3                        l742 0762                        l638 06F1  
                      l750 073A                        l728 07E3                        l744 0765  
                      l752 0742                        l746 0792                        l738 070E  
                      l754 074A                        l756 0752                        l748 072B  
                      u200 0775                        u130 07A6                        u131 07A5  
                      u205 0770                        u150 07BA                        u151 07B9  
                      u145 07AB                        u170 07D5                        u171 07D4  
                      u165 07BC                        u190 07F3                        u191 07F2  
                      u175 07D1                        _PEN 048A                        u185 07E5  
                      _SEN 0488                       _RCEN 048B                       _R_nW 04A2  
                     _main 072B                       btemp 007E                       start 0000  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
          __end_of___lldiv 07FC                      _SSPEN 00A5                      status 0003  
                    wtemp0 007E            __initialization 07FC               __end_of_main 075E  
         __end_of_i2c_stop 06F5                     ??_main 007E       write_ext_eeprom@data 0071  
         _write_ext_eeprom 070D                     _SSPADD 0093                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0078           __end_of_init_i2c 0796  
  __end_of__initialization 07FC             __pcstackCOMMON 0070          __end_of_i2c_start 06EC  
        __end_of_i2c_write 0700          _i2c_wait_for_idle 0700    write_ext_eeprom@address 0072  
       ?_i2c_wait_for_idle 0070                  ?_i2c_stop 0070        ??_i2c_wait_for_idle 0070  
               __pmaintext 072B                    _ACKSTAT 048E  __end_of_i2c_wait_for_idle 070D  
             init_i2c@baud 0020                    _SSPCON2 0091                 ??_i2c_stop 0070  
                ?_init_i2c 0020                    ___lldiv 0796   __end_of_write_ext_eeprom 072B  
                  __ptext1 070D                    __ptext2 06F5                    __ptext3 06EC  
                  __ptext4 06E3                    __ptext5 0700                    __ptext6 075E  
                  __ptext7 0796       end_of_initialization 07FC                 ??_init_i2c 0024  
          ___lldiv@divisor 0070            ___lldiv@counter 007D              i2c_write@data 0070  
      start_initialization 07FC                  _i2c_start 06E3                  _i2c_write 06F5  
                ___latbits 0002              __pcstackBANK0 0020                 ?_i2c_start 0070  
               ?_i2c_write 0070                   ?___lldiv 0070          ?_write_ext_eeprom 0071  
       ??_write_ext_eeprom 0072                ??_i2c_start 0070                ??_i2c_write 0070  
                 _i2c_stop 06EC                   _init_i2c 075E           ___lldiv@dividend 0074  
         ___lldiv@quotient 0079  
